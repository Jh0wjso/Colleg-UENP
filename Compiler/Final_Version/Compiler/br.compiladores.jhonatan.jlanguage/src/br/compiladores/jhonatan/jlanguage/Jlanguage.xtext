grammar br.compiladores.jhonatan.jlanguage.Jlanguage with org.eclipse.xtext.common.Terminals

generate jlanguage "http://www.compiladores.br/jhonatan/jlanguage/Jlanguage"

Programa:
    ':' 'VARIAVEIS' (declaracoes+=Declaracao)+
    ':' 'CODIGO' (comandos+=Comando)+;

Declaracao:
    name=ID ':' tipo=TipoVar;

ExpressaoAritmetica:
    termo1=TermoAritmetico outrosTermos+=OutroTermoAritmetico*;

OutroTermoAritmetico:
    operador=OpArit1 termo=TermoAritmetico;

TermoAritmetico:
    fator1=FatorAritmetico outrosFatores+=OutroFatorAritmetico*;

OutroFatorAritmetico:
    operador=OpArit2 fator=FatorAritmetico;

FatorAritmetico:
    FatorNumero | FatorVariavel | FatorSubExpressao;

FatorNumero:
    numero=INT;

FatorVariavel:
    variavel=[Declaracao];

FatorSubExpressao:
    '(' expressao=ExpressaoAritmetica ')';

ExpressaoRelacional:
    termo1=TermoRelacional outrosTermos+=OutroTermoRelacional*;

OutroTermoRelacional:
    operador=OpBool termo=TermoRelacional;

TermoRelacional:
    TermoComparacaoRelacional | TermoSubExpressaoRelacional;

TermoComparacaoRelacional:
    expr1=ExpressaoAritmetica opRel=OpRel expr2=ExpressaoAritmetica;

TermoSubExpressaoRelacional:
    '[' expRel=ExpressaoRelacional ']';

Comando:
    ComandoAtibuicao | ComandoEntrada | ComandoSaida | ComandoCondicao | ComandoRepeticao | ComandoSubAlgoritmo;

ComandoAtibuicao:
    'ATRIBUIR' exp=ExpressaoAritmetica 'A' variavel=[Declaracao];

ComandoEntrada:
    'LEIA' variavel=[Declaracao];

ComandoSaida:
    'PRINT' variavel=[Declaracao];

ComandoCondicao:
    'SE' exp=ExpressaoRelacional 'ENTAO' cmd1=Comando ('SENAO' cmd2=Comando)?;

ComandoRepeticao:
    'ENQUANTO' exp=ExpressaoRelacional cmd=Comando;

ComandoSubAlgoritmo:
    'INICIO' (comandos+=Comando)+ 'FIM';

ChamadaFuncao:
    name=ID '(' (argumentos+=ExpressaoAritmetica (',' argumentos+=ExpressaoAritmetica)*)? ')';

Funcao:
    'FUNCAO' name=ID '(' (parametros+=Declaracao (',' parametros+=Declaracao)*)? ')' ':' tipo=TipoVar comandos=Comando;

TipoVar:
    'INTEIRO' | 'REAL' | 'TEXTO' | 'BOOLEANO';

OpArit1:
    '+' | '-';

OpArit2:
    '*' | '/';

OpRel:
    '>' | '>=' | '<' | '<=' | '<>' | '=';

OpBool:
    'E' | 'OU';
